/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package uk.co.boots.columbus.cmdb.model.domain;

import java.io.Serializable;
import java.util.logging.Logger;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.NotEmpty;

import com.google.common.base.MoreObjects;

@Entity
@Table(name = "cm_globalconfig")
public class Globalconfig implements Identifiable<Long>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(Globalconfig.class.getName());

    // Raw attributes
    private Long id;
    private String parameter;
    private String value;
    private String hieraAddress;

    @Override
    public String entityClassName() {
        return Globalconfig.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "GlobalConfigID", precision = 19)
    @GeneratedValue
    @Id
    public Long getId() {
        return id;
    }

    @Override
    public void setId(Long id) {
        this.id = id;
    }

    public Globalconfig id(Long id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [parameter] ------------------------

    @NotEmpty
    @Size(max = 50)
    @Column(name = "GlobalConfigParameter", nullable = false, length = 50)
    public String getParameter() {
        return parameter;
    }

    public void setParameter(String parameter) {
        this.parameter = parameter;
    }

    public Globalconfig parameter(String parameter) {
        setParameter(parameter);
        return this;
    }
    // -- [value] ------------------------

    @Size(max = 50)
    @Column(name = "GlobalConfigValue", length = 50)
    public String getValue() {
        return value;
    }

    public void setValue(String value) {
        this.value = value;
    }

    public Globalconfig value(String value) {
        setValue(value);
        return this;
    }
    // -- [hieraAddress] ------------------------

    @Size(max = 50)
    @Column(name = "GlobalConfigHieraAddress", length = 50)
    public String getHieraAddress() {
        return hieraAddress;
    }

    public void setHieraAddress(String hieraAddress) {
        this.hieraAddress = hieraAddress;
    }

    public Globalconfig hieraAddress(String hieraAddress) {
        setHieraAddress(hieraAddress);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Globalconfig withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Globalconfig && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this Globalconfig instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("parameter", getParameter()) //
                .add("value", getValue()) //
                .add("hieraAddress", getHieraAddress()) //
                .toString();
    }
}