/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-angular:src/main/java/repository/EntityRepository.java.e.vm
 */
package uk.co.boots.columbus.cmdb.model.repository;

import java.util.List;

import org.springframework.data.domain.Example;
import org.springframework.data.domain.ExampleMatcher;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.jpa.repository.*;

import uk.co.boots.columbus.cmdb.model.domain.PackageInfo;
import uk.co.boots.columbus.cmdb.model.domain.PackageInfo_;

public interface PackageInfoRepository extends JpaRepository<PackageInfo, Long> {

    /**
     * Return the persistent instance of {@link PackageInfo} with the given unique property value name,
     * or null if there is no such persistent instance.
     *
     * @param name the unique value
     * @return the corresponding {@link PackageInfo} persistent instance or null
     */
    PackageInfo getByName(String name);

    default List<PackageInfo> complete(String query, int maxResults) {
        PackageInfo probe = new PackageInfo();
        probe.setName(query);

        ExampleMatcher matcher = ExampleMatcher.matching() //
                .withMatcher(PackageInfo_.name.getName(), match -> match.ignoreCase().startsWith());

        Page<PackageInfo> page = findAll(Example.of(probe, matcher), new PageRequest(0, maxResults));
        return page.getContent();
    }
}