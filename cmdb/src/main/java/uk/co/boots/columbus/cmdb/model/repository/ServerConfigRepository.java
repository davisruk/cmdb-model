/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-angular:src/main/java/repository/EntityRepository.java.e.vm
 */
package uk.co.boots.columbus.cmdb.model.repository;

import java.util.List;

import org.springframework.data.domain.Example;
import org.springframework.data.domain.ExampleMatcher;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.jpa.repository.*;

import uk.co.boots.columbus.cmdb.model.domain.ServerConfig;
import uk.co.boots.columbus.cmdb.model.domain.ServerConfig_;

public interface ServerConfigRepository extends JpaRepository<ServerConfig, Long> {

	List<ServerConfig> findByServerName(String envName);
	List<ServerConfig> findByServer_Environment_name(String envName);
    List<ServerConfig> findByServer_Environment_Release_name(String envName);
    
	default List<ServerConfig> complete(String query, int maxResults) {
        ServerConfig probe = new ServerConfig();
        probe.setParameter(query);

        ExampleMatcher matcher = ExampleMatcher.matching() //
                .withMatcher(ServerConfig_.parameter.getName(), match -> match.ignoreCase().startsWith());

        Page<ServerConfig> page = findAll(Example.of(probe, matcher), new PageRequest(0, maxResults));
        return page.getContent();
    }
}